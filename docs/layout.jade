mixin title( item, nosuff )
  if item.type === 'constructor'
    span.constructor=item.id
  else 
    span.pfx= item.type === 'instance method' ? 'this.' : item.name_prefix
    span.name= item.name

  unless nosuff
    if item.type === 'constructor' || item.type === 'instance method' || item.type === 'class method'
      | ()

mixin args( sig )
  -var opt=false
  |(
  if sig.arguments && sig.arguments.length
    span.arguments
      each arg, i in sig.arguments
        if arg.optional
          unless opt
            !='<small class="optional">'
            -opt=true
        else if opt
          !='</small>'
          -opt=false

        =(i === 0 ? '':', ')
        span(class=[arg.types])
          =arg.name
          if arg.callback
            +args( arg )
      if opt
        !='</small>'
  | )

mixin argdesc( sig )
  if sig.arguments && sig.arguments.length
    dl.arguments-desc
      each arg in sig.arguments
        dt(class=[arg.types])
          =arg.name
          if arg.callback
            +args( arg )
          
        dd
          if arg.types
            span.types=' ('+arg.types.join(' | ')+')'
          if arg.optional
            span.optional optional

          if arg.description
            !=md(arg.description)
          if arg.callback
            p Accepts:
            +argdesc( arg )
        

mixin signatures( item )
  if item.signatures
    ul.signatures
      each sig in item.signatures
        li
          div.declaration
            +title( item, true )
            +args( sig )

            if item.type !== 'constructor'
              |; // ->
              span.returns
                if sig.returns
                  each ret, i in sig.returns
                    =(i === 0 ? '':'|')
                    span(class=ret.type)=ret.type
                else
                  span.void void

          +argdesc( sig )




mixin doc( item, level )
  -var level = level || 1
  article.doc
    header
      !='<h'+level+' class="title">'
      a(id=item.path, href='#'+item.path)
        +title( item )
      !='</h'+level+'>'
    
    if item.short_description
      .desc
        !=md(item.short_description)
        
    +signatures(item)

    if item.description
      .desc.long
        !=md(item.description.replace(item.short_description, ''))
    
    if item.children && item.children.length
      .children
        for ch in item.children
          +doc(ch, level+1)

doctype html
html
  head
    meta(name='viewport', content='width=device-width', charset='utf-8')

    title= title

    link(href="http://fonts.googleapis.com/css?family=Quattrocento+Sans:400,700" rel="stylesheet",type="text/css")
    link(href="http://wellcaffeinated.net/PhysicsJS/assets/fonts/Caviar-Dreams-fontfacekit/stylesheet.css" rel="stylesheet",type="text/css")
    // Foundation CSS
    //link(rel="stylesheet", href="http://cdnjs.cloudflare.com/ajax/libs/foundation/4.1.6/css/foundation.min.css")

    // Prism CSS
    //link(rel="stylesheet", href="css/prism.css")
    link(rel="stylesheet", href="css/highlight.css")

    // Custom Styles
    link(rel="stylesheet", href="css/style.css")

    script(srr="http://cdnjs.cloudflare.com/ajax/libs/foundation/4.1.6/js/vendor/custom.modernizr.js")

  body
    
    section#main
      for mainItem in tree.children
        +doc(mainItem)

    // Foundation JS
    //- script(src='http://cdnjs.cloudflare.com/ajax/libs/foundation/3.2.2/javascripts/foundation.min.js')
    script(type='text/javascript').
      document.write('<script src=' +
      ('__proto__' in {} ? 'http://cdnjs.cloudflare.com/ajax/libs/zepto/1.0/zepto.min' : 'http://cdnjs.cloudflare.com/ajax/libs/jquery/2.0.3/jquery.min') +
      '.js><\/script>')

    //script(src='http://cdnjs.cloudflare.com/ajax/libs/foundation/4.1.6/js/foundation/foundation.reveal.min.js')

    script(src='js/page.js')
    // Prism js
    //script(src='js/prism.js')


